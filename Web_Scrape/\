const jssoup = require('jssoup').default;
const fetch = require("node-fetch");

class Program {
    constructor(combined, name, acronym = "") {
        if (!combined) {
            this.name = name;
            this.acronym = acronym;
        }
        else {
            let parenIndex = name.indexOf('(');
            this.name = name.substring(parenIndex - 1);
            this.acronym = name.substring(parenIndex + 1, name.indexOf(')'));
        }
    }
}

function getAllCoursesPerProgram(programList) {
    for (let program of programList) {
        fetch('http://catalog.calpoly.edu/coursesaz/' + program.acronym)
        .then((response) => {
            console.log(response.text());
            let soup = new JSSoup(response.text());
            let courses = soup.findAll('div', 'courseblock');
        });
    }
}

function getAllPrograms() {
    let programList = [];
    var request = makeHttpObject();
    request.open("GET", "your_url", true);
    request.send(null);
    request.onreadystatechange = function() {
        if (request.readyState == 4) {
            let matchReg = /.*[A-Z][a-z]*[A-Z][a-z]* ([0-9]{2,4}).*/g;
            let result = [...response.responseText.matchAll(matchReg)];
            console.log(result + "\n" + result[0]);
            for (let res of result) {
                console.log(res[0]);
                programList.append(new Program(true, res[0]));
            }
        }
    };
}

getAllPrograms();
